{
	"version": "2.0.0",
	"tasks": [
		{
			"label": "gradle-test-app",
			"type": "shell",
			"command": "./gradlew.bat :app:testDebugUnitTest",
			"isBackground": false,
			"group": "build"
		},
		{
			"label": "gradle-test-app",
			"type": "shell",
			"command": "./gradlew.bat :app:testDebugUnitTest",
			"isBackground": false,
			"group": "build"
		},
		{
			"label": "gradle-install-app",
			"type": "shell",
			"command": "./gradlew.bat :app:installDebug",
			"isBackground": false,
			"group": "build"
		},
		{
			"label": "gradle-install-app",
			"type": "shell",
			"command": "./gradlew.bat :app:installDebug",
			"isBackground": false,
			"group": "build"
		},
		{
			"label": "gradle-install-app",
			"type": "shell",
			"command": "./gradlew.bat :app:installDebug",
			"isBackground": false,
			"group": "build"
		},
		{
			"label": "gradle-install-app",
			"type": "shell",
			"command": "./gradlew.bat :app:installDebug",
			"isBackground": false,
			"group": "build"
		},
		{
			"label": "assemble and install debug",
			"type": "shell",
			"command": "gradlew.bat",
			"args": [
				":app:installDebug"
			],
			"isBackground": false,
			"problemMatcher": [
				"$gradle-worker"
			],
			"group": "build"
		},
		{
			"label": "install debug (after network fix)",
			"type": "shell",
			"command": "./gradlew.bat",
			"args": [
				":app:installDebug"
			],
			"isBackground": false,
			"problemMatcher": [
				"$gradle-worker"
			],
			"group": "build"
		},
		{
			"label": "gradle-install-app (on demand)",
			"type": "shell",
			"command": "./gradlew.bat",
			"args": [
				":app:installDebug"
			],
			"isBackground": false,
			"problemMatcher": [
				"$gradle-worker"
			],
			"group": "build"
		},
		{
			"label": "assemble and install debug (post-altcha)",
			"type": "shell",
			"command": "./gradlew.bat",
			"args": [
				":app:installDebug"
			],
			"isBackground": false,
			"problemMatcher": [
				"$gradle-worker"
			],
			"group": "build"
		},
		{
			"label": "install debug (altcha client)",
			"type": "shell",
			"command": "./gradlew.bat",
			"args": [
				":app:installDebug"
			],
			"isBackground": false,
			"problemMatcher": [
				"$gradle-worker"
			],
			"group": "build"
		},
		{
			"label": "gradle-test-app (on demand)",
			"type": "shell",
			"command": "./gradlew.bat",
			"args": [
				":app:testDebugUnitTest"
			],
			"isBackground": false,
			"problemMatcher": [
				"$gradle-worker"
			],
			"group": "build"
		},
		{
			"label": "gradle-test-app (after fixes)",
			"type": "shell",
			"command": "./gradlew.bat",
			"args": [
				":app:testDebugUnitTest"
			],
			"isBackground": false,
			"problemMatcher": [
				"$gradle-worker"
			],
			"group": "build"
		},
		{
			"label": "gradle test app (confirm green)",
			"type": "shell",
			"command": "./gradlew.bat",
			"args": [
				":app:testDebugUnitTest"
			],
			"isBackground": false,
			"problemMatcher": [
				"$gradle-worker"
			],
			"group": "build"
		},
		{
			"label": "gradle lint app (to reproduce CI lint error)",
			"type": "shell",
			"command": "./gradlew.bat",
			"args": [
				":app:lintDebug"
			],
			"isBackground": false,
			"problemMatcher": [
				"$gradle-worker"
			],
			"group": "build"
		},
		{
			"label": "gradle lint app (verify fix)",
			"type": "shell",
			"command": "./gradlew.bat",
			"args": [
				":app:lintDebug"
			],
			"isBackground": false,
			"problemMatcher": [
				"$gradle-worker"
			],
			"group": "build"
		},
		{
			"label": "gradle lint app (verify plugin fix)",
			"type": "shell",
			"command": "./gradlew.bat",
			"args": [
				":app:lintDebug"
			],
			"isBackground": false,
			"problemMatcher": [
				"$gradle-worker"
			],
			"group": "build"
		},
		{
			"label": "gradle-test-reader",
			"type": "shell",
			"command": "./gradlew.bat",
			"args": [
				":feature:reader:testDebugUnitTest"
			],
			"isBackground": false,
			"problemMatcher": [
				"$gradle"
			],
			"group": "build"
		},
		{
			"label": "gradle-test-app",
			"type": "shell",
			"command": "./gradlew.bat",
			"args": [
				":app:testDebugUnitTest"
			],
			"isBackground": false,
			"problemMatcher": [
				"$gcc"
			],
			"group": "build"
		},
		{
			"label": "Package Admin Web and API artifacts",
			"type": "shell",
			"command": "powershell",
			"args": [
				"-NoProfile",
				"-NonInteractive",
				"-Command",
				"Set-StrictMode -Version Latest; $ErrorActionPreference='Stop';",
				"Remove-Item -Force -EA SilentlyContinue tmp\\admin-web-dist.zip, tmp\\admin-web-dist.tar.gz, tmp\\admin-api-dist.zip;",
				"if (Test-Path admin\\web\\dist) { Remove-Item -Recurse -Force admin\\web\\dist };",
				"cd admin\\web; npm ci; npm run build; cd ..\\..;",
				"New-Item -ItemType Directory -Force tmp > $null;",
				"Compress-Archive -Path admin\\web\\dist\\* -DestinationPath tmp\\admin-web-dist.zip -Force;",
				"if (Test-Path admin\\api\\dist) { Remove-Item -Recurse -Force admin\\api\\dist };",
				"cd admin\\api; npm ci; npm run build; cd ..\\..;",
				"Compress-Archive -Path admin\\api\\dist\\* -DestinationPath tmp\\admin-api-dist.zip -Force;",
				"Write-Host '[PACK] Artifacts ready'"
			]
		},
		{
			"label": "Package Admin artifacts (fixed quoting)",
			"type": "shell",
			"command": "powershell",
			"args": [
				"-NoProfile",
				"-NonInteractive",
				"-Command",
				"Set-StrictMode -Version Latest; $ErrorActionPreference='Stop';",
				"Remove-Item -Force -EA SilentlyContinue tmp\\admin-web-dist.zip, tmp\\admin-web-dist.tar.gz, tmp\\admin-api-dist.zip;",
				"if (Test-Path admin\\web\\dist) { Remove-Item -Recurse -Force admin\\web\\dist };",
				"cd admin\\web; npm ci; npm run build; cd ..\\..;",
				"New-Item -ItemType Directory -Force tmp > $null;",
				"Compress-Archive -Path admin\\web\\dist\\* -DestinationPath tmp\\admin-web-dist.zip -Force;",
				"if (Test-Path admin\\api\\dist) { Remove-Item -Recurse -Force admin\\api\\dist };",
				"cd admin\\api; npm ci; npm run build; cd ..\\..;",
				"Compress-Archive -Path admin\\api\\dist\\* -DestinationPath tmp\\admin-api-dist.zip -Force;",
				"Write-Host '[PACK] Artifacts ready'"
			]
		}
	]
}