name: Android CI

on:
  # CI now runs only for pull requests targeting main, or manual dispatch.
  pull_request:
    branches:
      - main
  workflow_dispatch:

concurrency:
  group: android-ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build Test Quality
    runs-on: ubuntu-latest
    env:
      ANDROID_COMPILE_SDK: 36
      ANDROID_BUILD_TOOLS: 35.0.0
      ANDROID_HOME: ${{ github.workspace }}/.android-sdk
      ANDROID_SDK_ROOT: ${{ github.workspace }}/.android-sdk
      GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.caching=true -Dkotlin.compiler.execution.strategy=in-process
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          cache: gradle

      - name: Cache Android SDK
        id: cache-android
        uses: actions/cache@v4
        with:
          path: .android-sdk
          key: android-sdk-${{ env.ANDROID_COMPILE_SDK }}-bt-${{ env.ANDROID_BUILD_TOOLS }}

      - name: Download command line tools (if needed)
        if: steps.cache-android.outputs.cache-hit != 'true'
        run: |
          mkdir -p "$ANDROID_HOME/cmdline-tools"
          wget -q https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip -O cmdline-tools.zip
          unzip -q cmdline-tools.zip -d "$ANDROID_HOME/cmdline-tools"
          mv "$ANDROID_HOME/cmdline-tools/cmdline-tools" "$ANDROID_HOME/cmdline-tools/latest"

      - name: Install / Update Android SDK packages
        run: |
          yes | "$ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager" --sdk_root="$ANDROID_HOME" \
            "platforms;android-${ANDROID_COMPILE_SDK}" \
            "build-tools;${ANDROID_BUILD_TOOLS}" \
            "platform-tools"
          mkdir -p "$ANDROID_HOME/licenses"
          yes | "$ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager" --licenses || true
          "$ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager" --list | sed -n '1,120p' || true

      - name: Prepare Gradle
        run: chmod +x ./gradlew

      - name: Assemble Debug
        run: ./gradlew --stacktrace --parallel --build-cache assembleDebug

      - name: Unit Tests
        run: ./gradlew --stacktrace --parallel --build-cache testDebugUnitTest

      - name: Static Analysis & Coverage
        run: ./gradlew --stacktrace quality

      - name: Collect Detekt SARIF
        if: always()
        run: |
          mkdir -p build/reports/detekt
          ls -R build/reports || true

      - name: Upload Detekt SARIF
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: detekt-sarif
          path: build/reports/detekt/*.sarif
          if-no-files-found: warn

      - name: Upload Lint Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: android-lint
          path: "**/build/reports/lint-results*.xml"
          if-no-files-found: ignore

      - name: Node Backend Setup
        working-directory: server
        run: |
          npm install --no-audit --no-fund

      - name: Node Lint & Test
        working-directory: server
        run: |
          npx eslint . --ext .ts || true
          npx vitest run --coverage

      - name: Upload Coverage (Android)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: kover-reports
          path: build/reports/kover/
          if-no-files-found: ignore

      - name: Upload Coverage (Node)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: node-coverage
          path: server/coverage/
          if-no-files-found: ignore

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: app/build/test-results/testDebugUnitTest/

      - name: Upload APKs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: debug-apks
          path: "app/build/outputs/apk/**/debug/*.apk"
          if-no-files-found: ignore
